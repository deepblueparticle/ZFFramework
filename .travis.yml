matrix:
 include:

  - language: android
    env:
      - ZF_BUILD=Android;
        ANDROID_HOME=/usr/local/android-sdk;
        ZF_PROJ_PATH=demo/zfproj_with_src;
        ZF_PROJ_NAME=ZFFramework_test;
    android:
      components:
        - tools
        - build-tools-25.0.2
        - platform-tools
        - tools
        - android-25
    script:
      # Android licenses
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "tools" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "platforms;android-25" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "extras;android;m2repository" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "extras;google;m2repository" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "ndk-bundle" > /dev/null 2>&1
      # build
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_Android.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_Android.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/Android/${ZF_PROJ_NAME}

  - language: android
    env:
      - ZF_BUILD=Android;
        ANDROID_HOME=/usr/local/android-sdk;
        ZF_PROJ_PATH=demo/zfproj;
        ZF_PROJ_NAME=ZFFramework_test;
    android:
      components:
        - tools
        - build-tools-25.0.2
        - platform-tools
        - tools
        - android-25
    script:
      # Android licenses
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "tools" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "platforms;android-25" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "extras;android;m2repository" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "extras;google;m2repository" > /dev/null 2>&1
      - yes | ${ANDROID_HOME}/tools/bin/sdkmanager "ndk-bundle" > /dev/null 2>&1
      # build
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_Android.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_Android.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/Android/${ZF_PROJ_NAME}

  - language: objective-c
    env:
      - ZF_BUILD=iOS;
        ZF_PROJ_PATH=demo/zfproj_with_src;
        ZF_PROJ_NAME=ZFFramework_test;
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_iOS.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_iOS.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/iOS/${ZF_PROJ_NAME}

  - language: objective-c
    env:
      - ZF_BUILD=iOS;
        ZF_PROJ_PATH=demo/zfproj;
        ZF_PROJ_NAME=ZFFramework_test;
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_iOS.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_iOS.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/iOS/${ZF_PROJ_NAME}

  - language: cpp
    env:
      - ZF_BUILD=Qt;
        ZF_PROJ_PATH=demo/zfproj_with_src;
        ZF_PROJ_NAME=ZFFramework_test;
    os: linux
    compiler: gcc
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_Posix.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_Posix.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/Qt/${ZF_PROJ_NAME}

  - language: cpp
    env:
      - ZF_BUILD=Qt;
        ZF_PROJ_PATH=demo/zfproj;
        ZF_PROJ_NAME=ZFFramework_test;
    os: linux
    compiler: gcc
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_Posix.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_Posix.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/Qt/${ZF_PROJ_NAME}

  - language: cpp
    env:
      - ZF_BUILD=Qt;
        ZF_PROJ_PATH=demo/zfproj_with_src;
        ZF_PROJ_NAME=ZFFramework_test;
    os: osx
    compiler: clang
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_MacOS.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_MacOS.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/Qt/${ZF_PROJ_NAME}

  - language: cpp
    env:
      - ZF_BUILD=Qt;
        ZF_PROJ_PATH=demo/zfproj;
        ZF_PROJ_NAME=ZFFramework_test
    os: osx
    compiler: clang
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_MacOS.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_Qt_MacOS.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/Qt/${ZF_PROJ_NAME}

  - language: objective-c
    env:
      - ZF_BUILD=iOS;
        ZF_PROJ_PATH=demo_ZF2048/zfproj;
        ZF_PROJ_NAME=ZF2048;
    script:
      - chmod +x ../ZFFramework/master/ZF_CI/testbuild/testbuild_iOS.sh
      - ../ZFFramework/master/ZF_CI/testbuild/testbuild_iOS.sh ${ZF_PROJ_NAME} ${ZF_PROJ_PATH}/iOS/${ZF_PROJ_NAME}

  - language: cpp
    env:
      - ZF_BUILD=doc
    os: linux
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      # we need Doxygen > 1.8.11 (better markdown support, BUG 742715 https://bugzilla.gnome.org/show_bug.cgi?id=742715)
      - sudo apt-get install wget unzip cmake;
        _OLD_DIR=$(pwd);
        cd ..;
        wget -q https://github.com/doxygen/doxygen/archive/Release_1_8_14.zip;
        unzip -qo Release_1_8_14.zip;
        cd doxygen-Release_1_8_14;
        mkdir build;
        cd build;
        cmake -G "Unix Makefiles" ..;
        sudo make install;
        cd "$_OLD_DIR";
      - chmod +x master/ZF_CI/doc.sh;
        ./master/ZF_CI/doc.sh;

  # pod lint takes too long time to build, always timeout, disable for now
  # - language: cpp
  #   env:
  #     - ZF_BUILD=cocoapods_push
  #   os: osx
  #   compiler: clang
  #   if: repo = ZFFrameworkDist/ZFFramework AND branch = master
  #   script:
  #     - sudo gem install cocoapods;
  #     - chmod +x master/ZF_CI/cocoapods_push.sh;
  #       travis_wait 30 ./master/ZF_CI/cocoapods_push.sh;

  # pod lint takes too long time to build, separate by subspec
  # ZFTAG_ADD_MODULE
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFAlgorithm;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFAlgorithm_impl;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFCore;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFCore_impl;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFLua;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFLua_impl;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFUIKit;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFUIKit_impl;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFUIWebKit;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFUIWebKit_impl;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFUIWidget;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZFUtility;
  - language: cpp
    env:
      - ZF_BUILD=cocoapods_lint
    os: osx
    compiler: clang
    if: repo = ZFFramework/ZFFramework AND branch = master
    script:
      - sudo gem install cocoapods;
      - chmod +x master/ZF_CI/cocoapods_lint.sh;
        travis_wait 30 ./master/ZF_CI/cocoapods_lint.sh ZF_impl;


install:
  - if ! test -e "../ZFFramework"; then
      travis_retry git clone https://github.com/ZFFramework/ZFFramework ../ZFFramework;
    fi
  - if [ "$ZF_BUILD" = "Qt" ]; then
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        travis_retry sudo add-apt-repository ppa:beineri/opt-qt591-trusty -y;
        travis_retry sudo apt-get update -qq;
        travis_retry sudo apt-get install -qq qt59base;
        source /opt/qt59/bin/qt59-env.sh;
      else
        travis_retry brew update;
        travis_retry brew install qt5;
        brew link --force qt5;
        export HOMEBREW_QT5_VERSION=$(brew list --versions qt5 | rev | cut -d' ' -f1 | rev);
        sudo ln -s /usr/local/Cellar/qt5/$HOMEBREW_QT5_VERSION/mkspecs /usr/local/mkspecs;
      fi;
    fi

